/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import javax.swing.JOptionPane;
import Controller.PersonagemController;
import java.util.ArrayList;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel; 
import model.Obra;
import model.Personagem;
import model.Tabelas.PersonagemTableModel;
import Controller.ObraController; 
import javax.print.DocFlavor;
import javax.swing.JComboBox;

/**
 *
 * @author duda2
 */
public class Cad_Personagem extends javax.swing.JFrame {
    
    public Cad_Personagem() {
        initComponents();
        PreencheCombo();
        Tabela(3);
    }
    
    PersonagemController personagemController = new PersonagemController(); 
    ArrayList<Personagem> personagem = personagemController.PegarTodospersonagens();    
    ObraController obraController = new ObraController(); 
    ArrayList<Obra> obra = obraController.PegarTodasObras();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jComboBox1 = new javax.swing.JComboBox<>();
        pnPersonagem = new javax.swing.JPanel();
        pnCadPersonagem = new java.awt.Panel();
        lbNome = new javax.swing.JLabel();
        lbDescricao = new javax.swing.JLabel();
        lbCaracteristicas = new javax.swing.JLabel();
        lbAtor = new javax.swing.JLabel();
        lbFeitos = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        txtCaracteristica = new javax.swing.JTextField();
        txtAtor = new javax.swing.JTextField();
        txtFeitos = new javax.swing.JTextField();
        lbObra = new javax.swing.JLabel();
        cbObra = new javax.swing.JComboBox<>();
        spPersonagem = new javax.swing.JScrollPane();
        tbPersonagem = new javax.swing.JTable();
        btIncluir = new javax.swing.JButton();
        btRemover = new javax.swing.JButton();
        lbTituloTela = new java.awt.Label();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnPersonagem.setName("pnPersonagem");

        lbNome.setText("Nome:");
        lbNome.setToolTipText("");
        lbNome.setName("lbnome"); // NOI18N

        lbDescricao.setText("Descrição:");
        lbDescricao.setToolTipText("");
        lbDescricao.setName("lbdescricao"); // NOI18N

        lbCaracteristicas.setText("Características: ");
        lbCaracteristicas.setName("lbCaracteristicas");

        lbAtor.setText("Ator:");
        lbAtor.setName("lbAtor");

        lbFeitos.setText("Feitos:");
        lbFeitos.setName("lbFeitos");

        txtNome.setName("txtNome");

        txtDescricao.setName("txtnome"); // NOI18N

        txtCaracteristica.setName("txtcaracteristicas"); // NOI18N

        txtAtor.setName("txtator"); // NOI18N

        txtFeitos.setName("txtfeitos"); // NOI18N

        lbObra.setText("Obra");

        cbObra.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tbPersonagem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Descrição", "Características", "Ator", "Feitos", "Obra"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        spPersonagem.setViewportView(tbPersonagem);

        btIncluir.setText("Incluir");
        btIncluir.setName("btsalvar"); // NOI18N
        btIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirActionPerformed(evt);
            }
        });

        btRemover.setText("Remover");
        btRemover.setName("btRemover"); // NOI18N
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnCadPersonagemLayout = new javax.swing.GroupLayout(pnCadPersonagem);
        pnCadPersonagem.setLayout(pnCadPersonagemLayout);
        pnCadPersonagemLayout.setHorizontalGroup(
            pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCadPersonagemLayout.createSequentialGroup()
                .addGroup(pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCadPersonagemLayout.createSequentialGroup()
                        .addGroup(pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnCadPersonagemLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbNome, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbDescricao)
                                    .addComponent(lbCaracteristicas)
                                    .addComponent(lbAtor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbFeitos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnCadPersonagemLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(lbObra, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbObra, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCaracteristica, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAtor, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFeitos, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 130, Short.MAX_VALUE))
                    .addComponent(spPersonagem, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pnCadPersonagemLayout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(btIncluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btRemover)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnCadPersonagemLayout.setVerticalGroup(
            pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCadPersonagemLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDescricao)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbCaracteristicas)
                    .addComponent(txtCaracteristica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAtor)
                    .addComponent(txtAtor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFeitos)
                    .addComponent(txtFeitos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbObra)
                    .addComponent(cbObra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCadPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btIncluir)
                    .addComponent(btRemover))
                .addGap(107, 107, 107))
        );

        javax.swing.GroupLayout pnPersonagemLayout = new javax.swing.GroupLayout(pnPersonagem);
        pnPersonagem.setLayout(pnPersonagemLayout);
        pnPersonagemLayout.setHorizontalGroup(
            pnPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPersonagemLayout.createSequentialGroup()
                .addComponent(pnCadPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 106, Short.MAX_VALUE))
        );
        pnPersonagemLayout.setVerticalGroup(
            pnPersonagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPersonagemLayout.createSequentialGroup()
                .addComponent(pnCadPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 493, Short.MAX_VALUE))
        );

        lbTituloTela.setAlignment(java.awt.Label.CENTER);
        lbTituloTela.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lbTituloTela.setText("Cadastro de Personagem");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(pnPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(lbTituloTela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(lbTituloTela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirActionPerformed
        // TODO add your handling code here:
        try{
        VerificaCampo();
        Acoes(1);
        }
        catch(IllegalArgumentException e){
           JOptionPane.showMessageDialog(null, "Ocorreu uma exceção:\n" + e.toString(), "Exceção", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btIncluirActionPerformed

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        // TODO add your handling code here:
         try{          
         Acoes(2);
        }
        catch(IllegalArgumentException e){
           JOptionPane.showMessageDialog(null, "Ocorreu uma exceção:\n" + e.toString(), "Exceção", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btRemoverActionPerformed
    
    private void Tabela(int Crud) {        
        DefaultTableModel Personagem = (DefaultTableModel) tbPersonagem.getModel();
        Personagem.setColumnIdentifiers(new Object[]{"Nome", "Descricao", "Obra", "Característica", "Ator", "Feitos", "Obras"});        
        
        switch (Crud) {
            case 1:
                String[] newrow = {txtNome.getText(), txtDescricao.getText(),
                        txtCaracteristica.getText(), txtAtor.getText(), txtFeitos.getText(), (String) cbObra.getSelectedItem()};
                Personagem.addRow(newrow);
                break;   
            case 2:
                int result = JOptionPane.showConfirmDialog(null, "Deseja Excluir a linha ? ", "Excluir", JOptionPane.YES_NO_CANCEL_OPTION);                
                if (result == JOptionPane.YES_OPTION) {                    
                    int linhaSelecionada = tbPersonagem.getSelectedRow();
                    if (linhaSelecionada != -1) { // se não estiver em  nenhuma linha então 
                        ((DefaultTableModel) tbPersonagem.getModel()).removeRow(linhaSelecionada);
                    }
                }                
                break;            
            case 3:                
                for (Personagem dado : personagem) {
                    Personagem.addRow(new Object[]{dado.getNome(), dado.getDescricao(), dado.getObras(), dado.getCaracteristicas(), dado.getAtores(), dado.getFeitos()});
                }
                tbPersonagem = new JTable(new PersonagemTableModel(personagem));
                spPersonagem = new JScrollPane(tbPersonagem);
                getContentPane().add(spPersonagem);
                break;            
            default:
                throw new IllegalArgumentException("Tentou né");
        }
    };
    
    public void PreencheCombo(){
       cbObra.removeAllItems();        
       for(Obra obras : obra){
         cbObra.addItem(obras.getTitulo());
       }       
    }; 
         
     
     public void Acoes(int Crud) {
        switch (Crud) {
            case 1:
                String selectedObraTitulo = (String) cbObra.getSelectedItem();
                Obra selectedObra = obraController.VerObraPorTitulo(selectedObraTitulo);    
                personagemController.Adicionarpersonagem(txtNome.getText(), txtDescricao.getText(), 
                        selectedObra,
                        txtCaracteristica.getText(),
                        txtAtor.getText(),
                        txtFeitos.getText()
                        );                
                Tabela(1);   
                break;
            case 2:            
                  int result = JOptionPane.showConfirmDialog(null, "Deseja Excluir a linha ? ", "Excluir", JOptionPane.YES_NO_CANCEL_OPTION);                
                if (result == JOptionPane.YES_OPTION) {  
                 int linhaselecionada = tbPersonagem.getSelectedRow();
                if (linhaselecionada != -1) {
                    String nomePersonagem = (String) tbPersonagem.getValueAt(linhaselecionada, 0);
                    obraController.RemoverObra(nomePersonagem);
                    ((DefaultTableModel) tbPersonagem.getModel()).removeRow(linhaselecionada);
                }
                }
               
                break;               
            default:
                throw new AssertionError();
        }
        
    }
    
    private String VerificaCampo() {
        String VerificaCampo = " ";        
        
        if (txtNome.getText().equals("") || txtDescricao.getText().equals("")
                || txtCaracteristica.getText().equals("") || txtAtor.getText().equals("")
                || txtFeitos.getText().equals("") || cbObra.getSelectedItem().equals(" ")) {
            
            VerificaCampo = "Campos que precisam ser preenchidos:";
            
            if (txtNome.getText().equals("")) {
                VerificaCampo += "\nCampo nome está vazio.";                
            }
            if (txtDescricao.getText().equals("")) {
                VerificaCampo += "\nCampo descrição está vazio.";                
            }
            if (txtCaracteristica.getText().equals("")) {
                VerificaCampo += "\nCampo características  está vazio.";                
            }
            if (txtAtor.getText().equals("")) {
                VerificaCampo += "\nCampo ator está vazio.";                
            }
            if (txtFeitos.getText().equals("")) {
                VerificaCampo += "\nCampo feitos está vazio.";                
            }
            if (cbObra.getSelectedItem().equals("")) {
                VerificaCampo += "\nCampo obra está vazio.";                
            }
            
            JOptionPane.showMessageDialog(this, VerificaCampo, "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        
        return VerificaCampo;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) { 
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              Cad_Personagem cadpersonagem = new Cad_Personagem();  
                
               if(cadpersonagem.obra != null && !cadpersonagem.obra.isEmpty()){
                  new Cad_Personagem().setVisible(true);
               }
               else{
                JOptionPane.showMessageDialog(null, "Não há pobras cadastradas no sistema ", "ERROR", JOptionPane.ERROR_MESSAGE);
               }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btIncluir;
    private javax.swing.JButton btRemover;
    private javax.swing.JComboBox<String> cbObra;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JLabel lbAtor;
    private javax.swing.JLabel lbCaracteristicas;
    private javax.swing.JLabel lbDescricao;
    private javax.swing.JLabel lbFeitos;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbObra;
    private java.awt.Label lbTituloTela;
    private java.awt.Panel pnCadPersonagem;
    private javax.swing.JPanel pnPersonagem;
    private javax.swing.JScrollPane spPersonagem;
    private javax.swing.JTable tbPersonagem;
    private javax.swing.JTextField txtAtor;
    private javax.swing.JTextField txtCaracteristica;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtFeitos;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
